plugins {
    id 'org.springframework.boot' version "3.2.5"
    id 'maven-publish'
    id 'com.palantir.docker' version '0.36.0'
    id 'checkstyle'
}

dependencies {

    implementation('mysql:mysql-connector-java:8.0.22')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.2.5')
    implementation('org.springframework.boot:spring-boot-starter-web:3.2.5')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf:3.2.5')
    implementation ('org.liquibase:liquibase-core:4.27.0')
    implementation('com.h2database:h2:2.2.224')

    implementation('ch.qos.logback:logback-classic:1.4.14')
    implementation('org.slf4j:slf4j-api:2.0.12')

    implementation('com.google.guava:guava:32.1.1-jre')

    implementation('com.fasterxml.jackson.core:jackson-databind:2.16.1')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1')
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1')

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0')

    compileOnly('org.projectlombok:lombok:1.18.32')
    annotationProcessor('org.projectlombok:lombok:1.18.32')


    testCompileOnly('org.projectlombok:lombok:1.18.32')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.32')

    testImplementation('org.springframework.boot:spring-boot-starter-test:3.2.5')
    testImplementation('uk.org.webcompere:model-assert:1.0.0')


    test {
        useJUnitPlatform()
    }

}

ext {
    appName = 'insurance-calculator'
    appVersion = '1.0.3'
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveBaseName.set(appName)
    archiveVersion.set(appVersion)
}

publishing {
    publications {
        mavenJava(MavenPublication){
            artifact bootJar

            groupId = 'org.javaguru'
            artifactId = appName
            version = appVersion

            pom {
                name = 'Insurance Calculator Application'
                description = 'Application to calculate travel insurance premium'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()
    }

}

docker {
    name "${appName}:${appVersion}"
    files tasks.bootJar.outputs
}

tasks.named("docker").configure {
    dependsOn tasks.bootJar
}

tasks.register("dockerRunMySqlDb", Exec) {
    commandLine  "docker", "run", "--rm",
            "--name", "mysql-container",
            "--network", "insurance-calc-network",
            "-e", "MYSQL_ROOT_PASSWORD=12345",
            "-e", "MYSQL_DATABASE=insurance-calc-db",
            "-p", "3000:3306",
            "-d", "mysql:8.0"
}

tasks.register("dockerRunLocal", Exec) {
    dependsOn tasks.dockerRunMySqlDb
    dependsOn tasks.docker
    commandLine "docker", "run", "--rm",
            "-p", "8080:8080",
            "--name", appName,
            "--network", "insurance-calc-network",
            "${appName}:${appVersion}"
}

tasks.register("dockerStopLocal", Exec) {
    commandLine "docker", "stop", appName
    commandLine "docker", "stop", "mysql-container"
}

checkstyle {
    configFile = 'config/checkstyle/checkstyle.xml' as File
}